function [par_map_preeq, scale_map_preeq, ...
    par_map_sim, scale_map_sim] = map_condition(varargin)
    %Helper function for computing of condition parameter mapping.
    %See parameter_mapping/get_optimization_to_simulation_parameter_mapping
    
    [condition, measurement_df, condition_df, parameter_df, sbml_model, ...
        simulation_parameters, warn_unmapped, scaled_parameters] = ...
        varargin{:};
    
    cur_measurement_df = get_rows_for_condition(measurement_df, condition);
    
    test =  ~ismember('preequilibrationConditionId', ...
        condition.Properties.VariableNames) || ...
        ~isstring(condition.preequilibrationConditionId{:}) || ...
        ~ischar(condition.preequilibrationConditionId{:}) || ...
        isempty_ext(condition.preequilibrationConditionId{:});
    
    if test
        par_map_preeq = Dict();
        scale_map_preeq = Dict();
    else
        [par_map_preeq, scale_map_preeq] = ...
            get_parameter_mapping_for_condition( ...
            condition.preequilibrationConditionId{:}, ...
            true, ...
            cur_measurement_df, ...
            sbml_model, ...
            condition_df, ...
            'parameter_df', parameter_df, ...
            'simulation_parameters', simulation_parameters, ...
            'warn_unmapped', warn_unmapped, ...
            'scaled_parameters', scaled_parameters);
    end
    
    [par_map_sim, scale_map_sim] = ...
        get_parameter_mapping_for_condition( ...
        condition.simulationConditionId{:}, ...
        false, ...
        cur_measurement_df, ...
        sbml_model, ...
        condition_df, ...
        'parameter_df', parameter_df, ...
        'simulation_parameters', simulation_parameters, ...
        'warn_unmapped', warn_unmapped, ...
        'scaled_parameters', scaled_parameters);
end